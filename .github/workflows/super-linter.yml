# This workflow executes several linters on changed files based on languages used in your code base whenever
# you push a code or open a pull request.
#
# You can adjust the behavior by modifying this file.
# For more information, see:
# https://github.com/github/super-linter
name: Lint Code Base

on:
  push:

    branches: [ "ci-integration" ]
  pull_request:
    branches: [ "ci-integration" ]

jobs:
  run-lint:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: read
      statuses: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Restore dependencies
        run: dotnet restore GUI/RaytracerGUI/RaytracerGUI.sln
        
      - name: Lint Code Base
        uses: super-linter/super-linter@v7.1.0
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: "main"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_GITHUB_ACTIONS_STEP_SUMMARY: true
          SAVE_SUPER_LINTER_SUMMARY: true
          LINTER_RULES_PATH: .github/linters
          FIX_CLANG_FORMAT: true
          FIX_YAML_PRETTIER: true
          VALIDATE_CHECKOV: false
          FIX_DOTNET_SLN_FORMAT_STYLE: true
          FIX_DOTNET_SLN_FORMAT_WHITESPACE: true
          FIX_DOTNET_SLN_FORMAT_ANALYZERS: true

          CPP_LINTER_RULES: CPPLINT.cfg
          FILTER_REGEX_EXCLUDE: (GUI/RaytracerGUI/obj/*)|(GUI/RaytracerGUI/bin/*)

      - name: Run dotnet format with no restore
        run: dotnet format GUI/RaytracerGUI/RaytracerGUI.sln --verbosity detailed --no-restore
